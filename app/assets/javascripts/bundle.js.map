{"version":3,"sources":["webpack:///webpack/bootstrap 063a2a1828e8f79fd154","webpack:///./app/assets/javascripts/tower.js","webpack:///./app/assets/javascripts/index.js","webpack:///./app/assets/javascripts/game.js","webpack:///./app/assets/javascripts/monster.js","webpack:///./app/assets/javascripts/bullet.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;AChEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oFAAoF;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gFAAgF;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mCAAmC,OAAO,GAAG,QAAQ;AACrD,uCAAuC,KAAK;AAC5C;AACA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA,uCAAuC,UAAU;;AAEjD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,kCAAkC,aAAa;AAC/C;;AAEA;AACA,6BAA6B,eAAe;AAC5C;;AAEA;AACA;AACA;AACA,mBAAmB,YAAY;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA,uCAAuC,UAAU;AACjD;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,mBAAmB,yBAAyB;AAC5C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,mBAAmB,yBAAyB;AAC5C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,mBAAmB,yBAAyB;AAC5C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,mBAAmB,yBAAyB;AAC5C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,mBAAmB,yBAAyB;AAC5C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,mBAAmB,yBAAyB;AAC5C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;AC3XA;;AAEA;AACA;AACA,CAAC;;;;;;;;;;ACJD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,+BAA+B,MAAM;AACrC;;AAEA;AACA;AACA;AACA,kBAAkB,qDAAqD;AACvE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,4CAA4C,iCAAiC,EAAE;AAC/E;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;;AAGL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;;AAGL;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;;AAGA;AACA;;AAEA,kBAAkB,WAAW;AAC7B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,gDAAgD,KAAK;AACrD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,kBAAkB,+BAA+B,kBAAkB;AACnF;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kCAAkC,6BAA6B;AAC/D;AACA;;AAEA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,mBAAmB,gCAAgC;AACnD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,WAAW,UAAU,YAAY;AACrD,oBAAoB,YAAY;AAChC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,mBAAmB,kBAAkB;AACrC;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gDAAgD,kBAAkB;AAClE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE,kBAAkB;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA,mBAAmB,gCAAgC;AACnD;AACA;AACA;AACA,kBAAkB,SAAS;AAC3B,OAAO;AACP,kBAAkB,SAAS;AAC3B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,wBAAwB,wBAAwB;AAChD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,qBAAqB,yBAAyB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,0GAA0G;AAC1G;AACA,uCAAuC;AACvC;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qBAAqB,uBAAuB;AAC5C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC7wBA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,8BAA8B;;AAE9B;AACA;AACA;;AAEA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACvFA;;AAEA;;AAEA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 063a2a1828e8f79fd154","import Bullet from \"./bullet\";\n\nconst SVGNS = \"http://www.w3.org/2000/svg\";\n\nclass Tower {\n  constructor(game, type, pos) {\n    this.level = 0;\n    this.game = game;\n    this.pos = pos;\n    this.type = type;\n    this.shots = 0;\n    this.kills = 0;\n    this.special = \"none\";\n    this.startFrame = this.game.frame;\n\n    switch (type) {\n      case \"arrow\":\n        this.name = \"Arrow\";\n        this.damage = [30, 60, 120, 240, 480];\n        this.range = [120, 140, 160, 180, 200];\n        this.price = [60, 60, 120, 240, 480];\n        this.interval = [40, 35, 30, 25, 20];\n        this.findTarget = () => (this.findFirstTarget());\n        break;\n      case \"ice\":\n        this.name = \"Ice\";\n        this.damage = [40, 80, 160, 320, 640];\n        this.range = [100, 120, 140, 160, 180];\n        this.price = [60, 60, 120, 240, 480];\n        this.interval = [60, 55, 50, 45, 40];\n        this.slow = [[0.3, 100], [0.45, 120], [0.6, 140], [0.75, 160], [0.85, 200]]; // amount, duration\n        this.special = \"slow\";\n        this.findTarget = () => (this.findStrongestTarget());\n        break;\n      case \"cannon\":\n        this.name = \"Cannon\";\n        this.damage = [100, 200, 400, 800, 1600];\n        this.range = [100, 115, 130, 145, 160];\n        this.price = [100, 100, 200, 400, 800];\n        this.interval = [120, 115, 110, 105, 100, 95];\n        this.splash = [[0.3, 50], [0.35, 55], [0.4, 60], [0.45, 65], [0.5, 70]]; // amount, radius\n        this.special = \"splash\";\n        this.findTarget = () => (this.findClosestTarget());\n        break;\n      case \"assassin\":\n        this.name = \"Assassin\";\n        this.damage = [10, 20, 40, 80, 160];\n        this.range = [120, 140, 160, 180, 200];\n        this.price = [150, 150, 300, 600, 1620];\n        this.interval = [120, 115, 110, 105, 100, 95];\n        this.percentMissing = [8, 11, 14, 17, 20];\n        this.special = \"assassin\";\n        this.findTarget = () => (this.findWeakestTarget());\n        break;\n    }\n\n    let svg = document.createElementNS(SVGNS, \"rect\");\n    svg.setAttribute(\"x\", pos[0]);\n    svg.setAttribute(\"y\", pos[1]);\n\n    let length = 40;\n    this.cx = this.pos[0] + 0.5 * length;\n    this.cy = this.pos[1] + 0.5 * length;\n\n    svg.setAttribute(\"id\", `type_${pos[0]}_${pos[1]}}`);\n    svg.setAttribute(\"class\", `tower ${type}`);\n    $(\"#game\").append(svg);\n    this.svg = svg;\n\n    $(this.svg).on(\"click\", (e) => {\n      this.handleClick(e);\n    })\n  }\n\n  handleClick(e) {\n    let game = this.game;\n    game.clearSelection(true);\n    game.selectedTower = this;\n\n    let oldClass = $(this.svg).attr(\"class\");\n    $(this.svg).attr(\"class\", `tower ${this.type}-selected`)\n\n    // if (!!this.selectedPriority) {\n    //   //$(selectedPriority).attr(\"fill\",\"rgb(70, 119, 187)\");\n    //   $(selectedPriority).attr(\"fill\",\"rgb(120, 169, 237)\");\n    // }\n    // let id = \"priority_\" + this.priority + \"_button\";\n    // selectedPriority = document.getElementById(id);\n    // $(selectedPriority).attr(\"fill\",\"rgb(70, 119, 187)\");\n\n    this.showRange();\n    this.refreshTowerDetails();\n    game.updateBuyable();\n  }\n\n  showRange() {\n    let range = this.game.$range;\n    range.attr(\"cx\", this.cx)\n    range.attr(\"cy\", this.cy)\n    range.attr(\"r\", this.range[this.level]);;\n    range.attr(\"visibility\", \"visible\")\n  }\n\n  refreshTowerDetails() {\n    let level = this.level;\n\n    $(\"#tower_details_name\").text(this.name + \" \" + (level + 1));\n    if (this.type === \"assassin\") {\n      $(\"#tower_details_damage\").text(\"Damage: \" + this.percentMissing[level] + \"% (min \" + this.damage[level] + \")\");\n    } else {\n      $(\"#tower_details_damage\").text(\"Damage: \" + this.damage[level]);\n    }\n    $(\"#tower_details_range\").text(\"Range: \" + this.range[level]);\n    let rate = (Math.round(600/this.interval[level])/10).toString() + \"/sec\";\n    $(\"#tower_details_rate\").text(\"Rate of fire: \" + rate);\n    $(\"#tower_details_shots\").text(\"Shots: \" + this.shots);\n    $(\"#tower_details_kills\").text(\"Kills: \" + this.kills);\n    $(\"#tower_details_special\").text(\"Special: \" + this.special);\n    $(\"#tower_details_group\").attr(\"visibility\", \"visible\");\n    let upgradePrice = this.price[level + 1];\n    if (!upgradePrice) {\n      $(\"#upgrade_price\").text(\"--\");\n    } else {\n      $(\"#upgrade_price\").text(`${upgradePrice} g`);\n    }\n\n    this.getSalePrice();\n    $(\"#sale_price\").text(`${this.salePrice} g`);\n  }\n\n  getSalePrice() {\n    let level = this.level;\n    let total = 0;\n    for (let i = 0; i <= level; i++) {\n      total += this.price[i];\n    }\n    this.salePrice = Math.round(0.6 * total);\n    return this.salePrice;\n  }\n\n  unselect() {\n    $(this.svg).attr(\"class\", `tower ${this.type}`);\n    $(\"#tower_details_group\").attr(\"visibility\", \"hidden\");\n    this.game.selectedTower = null;\n  }\n\n  upgrade() {\n    if (this.level >= this.damage.length - 1) {\n      return;\n    }\n\n    if (this.game.gold < this.price[this.level + 1]) {\n      return;\n    }\n\n    let gold = this.game.gold - this.price[this.level + 1];\n    this.game.updateGold(gold);\n\n    this.level++;\n    this.showRange();\n    this.refreshTowerDetails();\n    this.game.updateBuyable();\n  }\n\n  sell() {\n    let gold = this.game.gold + this.getSalePrice();\n    this.game.updateGold(gold);\n\n    this.refreshTowerDetails();\n    this.svg.remove();\n    $(\"#tower_details_group\").attr(\"visibility\", \"hidden\");\n    this.game.updateBuyable();\n  }\n\n  shoot() {\n    if(this.game.monsterQueue.length === 0) {\n      return;\n    }\n\n    let target = this.findTarget();\n\n    if (!!target) {\n      // let bullet = new Bullet(this, target);\n      console.log(target);\n      this.shots++;\n    } else {\n      return;\n    }\n  }\n\n  findClosestTarget() {\n    let index = -1;\n    let p = document.getElementById(\"game\").createSVGPoint();\n    let monsterQueue = this.game.monsterQueue;\n\n    let closestVal = 99999;\n\n    for(let  i = 0; i < monsterQueue.length; i++) {\n      let monster = monsterQueue[i];\n      if (!monster.alive) {\n        continue;\n      }\n\n      p.x = monster.svg.getAttribute(\"cx\");\n      p.y = monster.svg.getAttribute(\"cy\");\n\n      if(monster.svg.getAttribute(\"class\") == \"hidden-monster\") {\n        continue;\n      }\n\n      let r = this.game.getDistance(this.cx, this.cy, p.x, p.y);\n      if ((r < closestVal) && (r <= this.range)) {\n        closestVal = r;\n        index = i;\n      }\n    }\n\n    if (index === -1) {\n      return;\n    }\n    return monsterQueue[index];\n  }\n\n  findFarthestTarget() {\n    let index = -1;\n    let p = document.getElementById(\"game\").createSVGPoint();\n    let monsterQueue = this.game.monsterQueue;\n\n    let farthestVal = -1;\n\n    for(let  i = 0; i < monsterQueue.length; i++) {\n      let monster = monsterQueue[i];\n      if (!monster.alive) {\n        continue;\n      }\n\n      p.x = monster.svg.getAttribute(\"cx\");\n      p.y = monster.svg.getAttribute(\"cy\");\n\n      if(monster.svg.getAttribute(\"class\") == \"hidden-monster\") {\n        continue;\n      }\n\n      let r = this.game.getDistance(this.cx, this.cy, p.x, p.y);\n      if ((r < farthestVal) && (r <= this.range)) {\n        farthestVal = r;\n        index = i;\n      }\n    }\n\n    if (index === -1) {\n      return;\n    }\n    return monsterQueue[index];\n  }\n\n  findFirstTarget() {\n    let index = -1;\n    let p = document.getElementById(\"game\").createSVGPoint();\n    let monsterQueue = this.game.monsterQueue;\n\n    let highestStep = -1;\n\n    for(let  i = 0; i < monsterQueue.length; i++) {\n      let monster = monsterQueue[i];\n      if(!monster.alive) {\n        continue;\n      }\n\n      p.x = monster.svg.getAttribute(\"cx\");\n      p.y = monster.svg.getAttribute(\"cy\");\n\n      let r = this.game.getDistance(this.cx, this.cy, p.x, p.y);\n      if ((monster.svg.getAttribute(\"class\") == \"hidden-monster\") || (r > this.range)) {\n        continue;\n      }\n      if (monster.step > highestStep) {\n        highestStep = monster.step;\n        index = i;\n      }\n    }\n\n    if (index === -1) {\n      return;\n    }\n    return monsterQueue[index];\n  }\n\n  findLastTarget() {\n    let index = -1;\n    let p = document.getElementById(\"game\").createSVGPoint();\n    let monsterQueue = this.game.monsterQueue;\n\n    let lowestStep = 99999;\n\n    for(let  i = 0; i < monsterQueue.length; i++) {\n      let monster = monsterQueue[i];\n      if(!monster.alive) {\n        continue;\n      }\n\n      p.x = monster.svg.getAttribute(\"cx\");\n      p.y = monster.svg.getAttribute(\"cy\");\n      if ((monster.svg.getAttribute(\"class\") == \"hidden-monster\") || (r > this.range)) {\n        continue;\n      }\n      if (monster.step < lowestStep) {\n        lowestStep = monster.step;\n        index = i;\n      }\n    }\n\n    if (index === -1) {\n      return;\n    }\n    return monsterQueue[index];\n  }\n\n  findStrongestTarget() {\n    let index = -1;\n    let p = document.getElementById(\"game\").createSVGPoint();\n    let monsterQueue = this.game.monsterQueue;\n\n    let highestHp = -1;\n\n    for(let  i = 0; i < monsterQueue.length; i++) {\n      let monster = monsterQueue[i];\n      if(!monster.alive) {\n        continue;\n      }\n\n      p.x = monster.svg.getAttribute(\"cx\");\n      p.y = monster.svg.getAttribute(\"cy\");\n      if ((monster.svg.getAttribute(\"class\") == \"hidden-monster\") || (r > this.range)) {\n        continue;\n      }\n      if (monster.hp > highestHp) {\n        highestHp = monster.hp;\n        index = i;\n      }\n    }\n\n    if (index === -1) {\n      return;\n    }\n    return monsterQueue[index];\n  }\n\n  findWeakestTarget() {\n    let index = -1;\n    let p = document.getElementById(\"game\").createSVGPoint();\n    let monsterQueue = this.game.monsterQueue;\n\n    let lowestHp = 99999;\n\n    for(let  i = 0; i < monsterQueue.length; i++) {\n      let monster = monsterQueue[i];\n      if(!monster.alive) {\n        continue;\n      }\n\n      p.x = monster.svg.getAttribute(\"cx\");\n      p.y = monster.svg.getAttribute(\"cy\");\n      if ((monster.svg.getAttribute(\"class\") == \"hidden-monster\") || (r > this.range)) {\n        continue;\n      }\n      if (monster.hp < lowestHp) {\n        lowestHp = monster.hp;\n        index = i;\n      }\n    }\n\n    if (index === -1) {\n      return;\n    }\n    return monsterQueue[index];\n  }\n}\n\nexport default Tower;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/assets/javascripts/tower.js\n// module id = 0\n// module chunks = 0","import Game from \"./game\";\n\n$(document).ready(() => {\n  new Game();\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/assets/javascripts/index.js\n// module id = 1\n// module chunks = 0","import Tower from \"./tower\";\nimport Monster from \"./monster\";\n\nconst SVGNS = \"http://www.w3.org/2000/svg\";\nconst PATH_D = \"M 180 0 L 180 140 L 100 140 L 100 420 L 300 420 L 300 100 L 620 100 L 620 220 L 420 220 L 420 340 L 801 340\";\nconst TOWERS = {\n  arrow: {\n    name: \"Arrow\",\n    price: 60,\n    index: 1,\n    description: \"Low damage but high range and rate of fire.\",\n    range: 120,\n  },\n  ice: {\n    name: \"Ice\",\n    price: 80,\n    index: 2,\n    description: \"Medium damage, range, and rate of fire. Slows enemies.\",\n    range: 100,\n  },\n  cannon: {\n    name: \"Cannon\",\n    price: 100,\n    index: 3,\n    description: \"High damage but low range and rate of fire. Applies splash damage to nearby enemies.\",\n    range: 100\n  },\n  assassin: {\n    name: \"Assassin\",\n    price: 150,\n    index: 4,\n    description: \"High range but low rate of fire. Deals more damage to low-health targets.\",\n    range: 120\n  },\n};\n\nclass Game {\n  constructor() {\n    this.$field = $(\"#field\");\n\n    this.offset = this.$field.offset();\n    this.grid = {\n      increment: 40,\n      height: 13,\n      width: 20\n    }\n\n    this.fps = 60;\n    this.frameLength = 1000 / this.fps\n\n    this.initializeAnimation();\n    this.buildPath();\n    this.buildIndicators();\n    this.loadTooltips();\n    this.addListeners();\n    this.newGame();\n\n    this.draw = this.draw.bind(this);\n  }\n\n  newGame() {\n    this.updateGold(240)\n    this.updateLives(20);\n    this.updateLevel(0);\n    this.monsterQueue = [];\n    this.towerQueue = [];\n    this.frame = 0;\n  }\n\n  updateGold(gold) {\n    this.gold = gold;\n    $(\"#gold\").text(gold);\n  }\n\n  updateLives(lives) {\n    this.lives = lives;\n    $(\"#lives\").text(lives);\n  }\n\n  updateLevel(level) {\n    this.level = level;\n    $(\"#level\").text(`Level: ${level}`);\n  }\n\n  initializeAnimation() {\n    let lastTime = 0;\n    let vendors = ['ms', 'moz', 'webkit', 'o'];\n    for(let x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\n      window.requestAnimationFrame = window[vendors[x]+'RequestAnimationFrame'];\n      window.cancelAnimationFrame = window[vendors[x]+'CancelAnimationFrame']\n                                 || window[vendors[x]+'CancelRequestAnimationFrame'];\n    }\n\n    if (!window.requestAnimationFrame) {\n      window.requestAnimationFrame = (callback, element) => {\n          let currTime = new Date().getTime();\n          let timeToCall = Math.max(0, 16 - (currTime - lastTime));\n          let id = window.setTimeout(() => { callback(currTime + timeToCall); },\n            timeToCall);\n          lastTime = currTime + timeToCall;\n          return id;\n      };\n    }\n\n    if (!window.cancelAnimationFrame) {\n      window.cancelAnimationFrame = (id) => {\n          clearTimeout(id);\n      };\n    }\n  }\n\n  buildPath() {\n    let pathBackground = document.createElementNS(SVGNS, \"path\");\n    pathBackground.setAttribute(\"d\", PATH_D);\n    pathBackground.setAttribute(\"id\", \"path_background\");\n    pathBackground.setAttribute(\"class\", \"path-background\");\n\n    let path = document.createElementNS(SVGNS, \"path\");\n    path.setAttribute(\"d\", PATH_D);\n    path.setAttribute(\"id\", \"path\");\n    path.setAttribute(\"class\", \"path\");\n\n    $(\"#game\").append(pathBackground);\n    $(\"#game\").append(path);\n\n    let pathStart = document.getElementById(\"game\").createSVGPoint();\n    pathStart.x = 180;\n    pathStart.y = 0;\n    this.pathStart = pathStart;\n\n    let pathEnd = document.getElementById(\"game\").createSVGPoint();\n    pathEnd.x = 800;\n    pathEnd.y = 340;\n    this.pathEnd = pathEnd;\n\n    this.path = path;\n    this.pathLength = path.getTotalLength();\n  }\n\n  buildIndicators() {\n    let selection = document.createElementNS(SVGNS, \"rect\");\n    selection.setAttribute(\"x\", 0);\n    selection.setAttribute(\"y\", 0);\n    selection.setAttribute(\"visibility\", \"hidden\");\n    selection.setAttribute(\"class\", \"button selection\");\n\n    let range = document.createElementNS(SVGNS, \"circle\");\n    range.setAttribute(\"class\", \"range\");\n\n    $(\"#game\").append(selection);\n    $(\"#game\").append(range);\n\n    this.$selection = $(selection);\n    this.$range = $(range);\n  }\n\n  addListeners() {\n    this.addFieldListeners();\n    this.addBuyListeners();\n    this.addDetailsListeners();\n    this.addKeyListeners();\n  }\n\n  addFieldListeners() {\n    let field = this.$field;\n    field.on(\"mousemove\", (e) => {\n      this.mouseOverField(e);\n    });\n\n    field.on(\"click\", (e) => {\n\n    });\n\n    let selection = this.$selection;\n    selection.on(\"click\", (e) => {\n      this.clickField(e);\n    });\n\n    selection.on(\"mouseleave\", (e) => {\n      selection.attr(\"visibility\", \"hidden\");\n      this.$range.attr(\"visibility\", \"hidden\");\n    });\n  }\n\n  addBuyListeners() {\n    $(\".buy\").on(\"click\", (e) => {\n      this.clickBuy(e);\n    });\n\n    $(\".buy\").on(\"mouseover\", (e) => {\n      this.mouseOverBuy(e);\n    });\n\n    $(\".buy\").on(\"mouseleave\", (e) => {\n      this.hideTooltip(e);\n    });\n  }\n\n  addDetailsListeners() {\n    $(\"#upgrade_button\").on(\"mouseover\", (e) => {\n      this.mouseOverUpgrade(e);\n    });\n\n    $(\"#upgrade_button\").on(\"mouseleave\", (e) => {\n      this.hideTooltip(e);\n    });\n\n\n    $(\"#upgrade_button\").on(\"click\", (e) => {\n      if (!!this.selectedTower) {\n        this.selectedTower.upgrade();\n      }\n    });\n\n    $(\"#sell_button\").on(\"mouseover\", (e) => {\n      this.mouseOverSell(e);\n    });\n\n    $(\"#sell_button\").on(\"mouseleave\", (e) => {\n      this.hideTooltip(e);\n    });\n\n\n    $(\"#sell_button\").on(\"click\", (e) => {\n      if (!!this.selectedTower) {\n        this.selectedTower.sell();\n      }\n    });\n  }\n\n  addKeyListeners() {\n    $(window).on(\"keydown\", (e) => {\n      if (e.keyCode === 27) { //ESC\n        if (this.building) {\n          $(\"#selection\").attr(\"visibility\", \"hidden\");\n          $(\"#range\").attr(\"visibility\", \"hidden\");\n          this.clearSelection();\n          this.building = false;\n        } else {\n          this.clearSelection();\n        }\n        return;\n      }\n      if (e.keyCode === 32) {    //space\n        if (!this.gameOver) {\n          this.spawnWave();\n        }\n        return;\n      }\n      // if ((e.shiftKey) && (e.keyCode == 85)) { //shift-U\n      //   if (selectedTower != null) {\n      //     clickPriority(null, $(\"#priority_closest_button\"));\n      //   }\n      //   return;\n      // }\n      // if ((e.shiftKey) && (e.keyCode == 73)) { //shift-I\n      //   if (selectedTower != null) {\n      //     clickPriority(null, $(\"#priority_first_button\"));\n      //   }\n      //   return;\n      // }\n      // if ((e.shiftKey) && (e.keyCode == 79)) { //shift-O\n      //   if (selectedTower != null) {\n      //     clickPriority(null, $(\"#priority_strongest_button\"));\n      //   }\n      //   return;\n      // }\n      // if ((e.shiftKey) && (e.keyCode == 74)) { //shift-J\n      //   if (selectedTower != null) {\n      //     clickPriority(null, $(\"#priority_farthest_button\"));\n      //   }\n      //   return;\n      // }\n      // if ((e.shiftKey) && (e.keyCode == 75)) { //shift-K\n      //   if (selectedTower != null) {\n      //     clickPriority(null, $(\"#priority_last_button\"));\n      //   }\n      //   return;\n      // }\n      // if ((e.shiftKey) && (e.keyCode == 76)) { //shift-L\n      //   if (selectedTower != null) {\n      //     clickPriority(null, $(\"#priority_weakest_button\"));\n      //   }\n      //   return;\n      // }\n      if (e.keyCode === 49) { //1\n        this.buy($(\"#buy_arrow\"));\n        return;\n      }\n      if (e.keyCode === 50) { //2\n        this.buy($(\"#buy_ice\"));\n        return;\n      }\n      if (e.keyCode === 51) { //3\n        this.buy($(\"#buy_cannon\"));\n        return;\n      }\n      if (e.keyCode === 52) { //4\n        this.buy($(\"#buy_assassin\"));\n        return;\n      }\n      if (e.keyCode === 80) { //(P)ause\n        if (this.playing) {\n          this.playing = false;\n          window.cancelAnimationFrame(this.requestID);\n          return;\n        } else {\n          this.playing = true;\n          this.requestID = window.requestAnimationFrame(this.draw);\n          return;\n        }\n      }\n      if (e.keyCode === 83) { //(S)ell\n        if (!!this.selectedTower) {\n          this.selectedTower.sell();\n          return;\n        }\n      }\n      if (e.keyCode === 85) { //(U)pgrade\n        if (!!this.selectedTower) {\n          this.selectedTower.upgrade();\n          return;\n        }\n      }\n    });\n  }\n\n\n  spawnWave(count = 10) {\n    this.updateLevel(this.level + 1);\n\n    for(let i = 0; i < count; i++) {\n      new Monster(this.level, i, this);\n    }\n\n    this.liveMonster += count;\n    if (!this.playing) {\n      this.playing = true;\n      this.requestID = window.requestAnimationFrame(this.draw);\n    }\n  }\n\n  loadTooltips() {\n    this.loadBuy();\n  }\n\n  loadBuy() {\n    let svgHeight = 24;\n    let svgWidth = 24;\n    let boxHeight = 50;\n    let boxWidth = 240;\n\n    let tooltipGroup = document.createElementNS(SVGNS, \"g\");\n    let tooltipBox = document.createElementNS(SVGNS, \"rect\");\n    $(tooltipBox).attr(\"class\", \"tooltip\");\n\n    let title = document.createElementNS(SVGNS, \"tspan\");\n    $(title).attr(\"class\", \"title\")\n\n    let price = document.createElementNS(SVGNS, \"tspan\");\n    $(price).attr(\"class\", \"price\")\n\n    let desc = document.createElementNS(SVGNS, \"tspan\");\n    $(desc).attr(\"class\", \"description\")\n\n    let tooltipText = document.createElementNS(SVGNS, \"text\");\n    $(tooltipText).attr(\"class\", \"tooltip-text\");\n\n    tooltipText.appendChild(title);\n    tooltipText.appendChild(price);\n    tooltipText.appendChild(desc);\n\n    $(tooltipGroup).attr(\"opacity\", \"0.9\");\n    $(tooltipBox).attr(\"height\", 50);\n\n    tooltipGroup.appendChild(tooltipBox);\n    tooltipGroup.appendChild(tooltipText);\n\n    this.tooltipBuy = {\n      group: tooltipGroup,\n      box: tooltipBox,\n      text: tooltipText,\n      title,\n      price,\n      desc,\n      svgHeight,\n      svgWidth,\n      boxHeight,\n      boxWidth\n    }\n  }\n\n  clickBuy(e) {\n    this.buy(e.target);\n  }\n\n  buy(svg) {\n    this.clearSelection();\n    let id = $(svg).attr(\"id\");\n    let type = id.slice(id.indexOf(\"_\") + 1, id.length);\n\n    if (TOWERS[type].price > this.gold) {\n      return;\n    }\n\n    $(svg).attr(\"class\", `button buy selected ${type}`);\n    this.building = true;\n    this.buildingType = type;\n  }\n\n  clearSelection(keepCursorOn) {\n    if (!!this.selectedTower) {\n      this.selectedTower.unselect();\n    }\n    if (!!this.selectedMonster) {\n      this.selectedMonster.unselect();\n    }\n\n    if ((this.building) && (keepCursorOn == undefined)) {\n      this.building = false;\n      $(`#buy_${this.buildingType}`).attr(\"class\", `button buy ${this.buildingType}`);\n    }\n  }\n\n\n  mouseOverBuy(e) {\n    let svg = e.target;\n    let details = this.getDetails(svg);\n\n    this.showTooltip(svg, details);\n  }\n\n  mouseOverUpgrade(e) {\n    let svg = e.target;\n    let details = [\"Upgrade (u)\", \"80g\", \"Upgrade tower to the next level. Maximum level is 5.\"]\n    this.showTooltip(svg, details);\n  }\n\n  mouseOverSell(e) {\n    let svg = e.target;\n    let details = [\"Sell (s)\", `${this.selectedTower.salePrice} g`, \"Sell tower. 60% of cost is refunded.\"]\n    this.showTooltip(svg, details);\n  }\n\n  getDetails(svg) {\n    let details = []; // title, price, description\n    let svgClass = $(svg).attr(\"class\");\n    if (svgClass == undefined) {\n      if ($(svg).attr(\"xlink:href\") != undefined) {\n        svgClass = $($(svg).attr(\"xlink:href\")).attr(\"class\");\n      }\n      if (svgClass == undefined) {\n        return;\n      }\n    }\n\n    let id = $(svg).attr(\"id\");\n\n    let type = \"arrow\";\n    for (let i = 0; i < Object.keys(TOWERS).length; i++) {\n      let key = Object.keys(TOWERS)[i];\n      if (svgClass.indexOf(key) !== -1) {\n        type = key;\n      }\n    }\n\n    // console.log(type);\n    let tower = TOWERS[type]\n    details[0] = `${tower.name} Tower (${tower.index})`;\n    details[1] = `${tower.price} g`;\n    details[2] = tower.description;\n    return details;\n  }\n\n  showTooltip(svg, details) {\n    let svgHeight = this.tooltipBuy.svgHeight;\n    let svgWidth = this.tooltipBuy.svgWidth;\n    let boxHeight = this.tooltipBuy.boxHeight;\n    let boxWidth = this.tooltipBuy.boxWidth;\n\n    let x = parseInt($(svg).attr(\"x\")) + 0.5 * parseInt(svgWidth) - 0.5 * boxWidth;\n    if (x < 0) {\n      x = 0;\n    } else if (x + boxWidth >= parseInt($(\"#game\").attr(\"width\"))) {\n      x = parseInt($(\"#game\").attr(\"width\")) - boxWidth;\n    }\n\n    let y = parseInt($(svg).attr(\"y\")) + parseInt(svgHeight) + 10;\n\n    let box = this.tooltipBuy.box;\n    $(box).attr(\"x\", x);\n    $(box).attr(\"y\", y);\n\n\n    let title = this.tooltipBuy.title;\n    $(title).text(details[0]);\n    $(title).attr(\"x\", x + 0.5 * boxWidth);\n    $(title).attr(\"y\", y + 20);\n\n    let price = this.tooltipBuy.price;\n    $(price).text(details[1]);\n    $(price).attr(\"x\", x + boxWidth - 36);\n    $(price).attr(\"y\", y + 20);\n\n    let group = this.tooltipBuy.group;\n    $(group).attr(\"opacity\", \"0.9\");\n\n    let text = this.tooltipBuy.text;\n    let desc = this.tooltipBuy.desc;\n\n    let descs = this.processText(text, details[2], x, y, boxWidth);\n    for (let i = 0; i < descs.length; i++) {\n      desc.appendChild(descs[i]);\n    }\n\n    $(box).attr(\"height\", 36 + 14 * descs.length);\n\n    $(\"#game\").append(group);\n  }\n\n  processText(svg, text, x, y, box_width) {\n    // line wrapping, since this doesn't exist in SVG\n    let descs = [];\n    descs = this.processTextRecursive(descs, text, 0);\n\n    let descSvg = [];\n    for (let i = 0; i < descs.length; i++) {\n      let desc = document.createElementNS(SVGNS, \"tspan\");\n      $(desc).attr(\"x\", x + 0.5 * box_width);\n      $(desc).attr(\"y\", y + 36 + (12 * i));\n      $(desc).attr(\"class\", \"description\");\n      $(desc).text(descs[i]);\n      descSvg.push(desc);\n    }\n    return descSvg;\n  }\n\n  processTextRecursive(descs, text, i) {\n    if (text.length == 0) {\n      return descs;\n    }\n    let maxLength = 40;\n    if (text.length <= maxLength) {\n      descs[i] = text;\n      return descs;\n    }\n\n    let substr_raw = text.slice(0, maxLength);\n    let lastSpace = substr_raw.lastIndexOf(\" \");\n    if (lastSpace == -1) {\n      descs = null;\n      descs = [\"Error: Overflow\"];\n      return descs;\n    }\n    let substrCut = substr_raw.slice(0, lastSpace);\n    let remainder = text.slice(lastSpace + 1, text.length);\n    descs[i] = substrCut;\n\n    return this.processTextRecursive(descs, remainder, i + 1);\n  }\n\n  hideTooltip(e) {\n    $(this.tooltipBuy.group).remove();\n    $(this.tooltipBuy.desc).empty();\n  }\n\n  mouseOverField(e) {\n    if (!this.building) {\n      return;\n    }\n    let tower = TOWERS[this.buildingType];\n\n    let coords = this.getGridCoordinates(e);\n    let increment = this.grid.increment;\n    let x = coords[0];\n    let y = coords[1];\n\n    let selection = this.$selection;\n    selection.attr(\"x\", (x * increment));\n    selection.attr(\"y\", (y * increment));\n    selection.attr(\"class\", `button selection ${this.buildingType}`);\n    selection.attr(\"visibility\", \"visible\");\n\n    let range = this.$range;\n    range.attr(\"cx\" , (x + 0.5) * increment);\n    range.attr(\"cy\", (y + 0.5) * increment);\n    // range.attr(\"fill\", tower.color)\n    range.attr(\"r\", tower.range);\n    range.attr(\"visibility\", \"visible\");\n  }\n\n  getGridCoordinates(e) {\n    let coords = [];\n    let increment = this.grid.increment;\n    let width = this.grid.width;\n    let height = this.grid.height;\n\n    let x = Math.floor((e.clientX - this.offset.top) / increment);\n    let y = Math.floor((e.clientY - this.offset.top) / increment);\n\n    if (x >= width) {\n      x = width - 1;\n    }\n    if (y >= height) {\n      y = height - 1;\n    }\n\n    coords[0] = x;\n    coords[1] = y;\n    return coords;\n  }\n\n  clickField(e) {\n    if (!this.building) {\n      return;\n    }\n    let coords = this.getGridCoordinates(e);\n    let x = this.grid.increment * coords[0];\n    let y = this.grid.increment * coords[1];\n    // let index = window[building_type + \"_index\"];\n    let price = TOWERS[this.buildingType].price;\n    if (price <= this.gold) {\n      this.gold -= price;\n      this.updateBuyable();\n      $(\"#gold\").text(this.gold);\n      if (this.gold < price) {\n        this.building = false;\n        this.clearSelection();\n        $(\"#buy_\" + this.buildingType).attr(\"class\", `button buy ${this.buildingType}`);\n      }\n      let tower = new Tower(this, this.buildingType, [x, y]);\n      $(\"#game\").append(tower.svg);\n      this.towerQueue.push(tower);\n      tower.handleClick();\n      // this.building = false;\n    }\n\n\n  }\n\n  updateBuyable() {\n    for (let i = 0; i < Object.keys(TOWERS).length; i++) {\n      let towerKey = Object.keys(TOWERS)[i];\n      let tower = TOWERS[towerKey];\n      if (tower.price > this.gold) {\n        $(`#buy_${towerKey}`).attr(\"opacity\", \"0.3\");\n      } else {\n        $(`#buy_${towerKey}`).attr(\"opacity\", \"1\");\n      }\n    }\n\n    let selectedTower = this.selectedTower;\n    if (!!selectedTower) {\n      if (selectedTower.level >= selectedTower.damage.length - 1) {\n        $(\"#upgrade\").attr(\"class\", \"disabled\");\n        return;\n      }\n      let upgradePrice = selectedTower.price[selectedTower.level + 1];\n      if (upgradePrice > this.gold) {\n        $(\"#upgrade\").attr(\"class\", \"disabled\");\n      } else {\n        $(\"#upgrade\").attr(\"opacity\", \"1\");\n      }\n    }\n  }\n\n  draw() {\n    this.requestID = window.requestAnimationFrame(this.draw);\n\n    window.setTimeout(() => {\n      // let bullet;\n      // for (let i = 0; i < bulletQueue.length; i++) {\n      //   bullet = bulletQueue.shift();\n      //   bullet.updatePath();\n      // }\n\n      // let len = this.monsterQueue.length;\n      // let path = document.getElementById(\"path\");\n      // let p;\n\n      let monsterQueue = this.monsterQueue;\n      for (let i = 0; i < monsterQueue.length; i++) {\n        let monster = monsterQueue.shift();\n        if ((!monster.alive) || (monster.svg.getAttribute(\"class\") == \"hidden-monster\")) {\n          if (monster.framesToSpawn > 1) {\n            monster.framesToSpawn--;\n            monsterQueue.push(monster);\n            continue;\n          } else if (monster.framesToSpawn == 1) {\n            monster.alive = true;\n            monster.svg.setAttribute(\"class\", \"monster\");\n            monster.framesToSpawn--;\n          } else {\n            continue;\n          }\n        }\n\n        let stepLength = monster.stepLength;\n        if (monster.slowed) {\n          stepLength *= (1 - monster.slowedAmount);\n          monster.slowedTimer--;\n          if (monster.slowedTimer <= 0) {\n            //alert(monster.slowedTimer);\n            monster.slowed = false;\n            monster.slowedAmount = 0;\n            monster.slowedTimer = 0;\n          }\n        }\n\n        monster.step += stepLength;\n\n        // console.log(monster.stepLength);\n        let p = this.path.getPointAtLength(monster.step);\n        //alert(p.x + \", \" + p.y + \" (\" + monster.stepLength + \")\");\n        monster.svg.setAttribute(\"cx\", p.x);\n        monster.svg.setAttribute(\"cy\", p.y);\n        if (this.getDistance(p.x, p.y, this.pathEnd.x, this.pathEnd.y) <= monster.svg.getAttribute(\"r\")) {      //reached the end\n          monster.svg.setAttribute(\"visibility\", \"hidden\");\n          if (!!this.selectedMonster) { //clear selection if selected\n            if (monster.selected) {\n              this.clearSelection();\n            }\n          }\n\n          this.updateLives(this.lives - 1);\n\n          if (this.lives === 0) {\n            window.cancelAnimationFrame(this.requestID);\n            // this.gold = 0;\n            // updateBuyable();\n            // let game_over_group = document.getElementById(\"game_over_group\");\n            // let temp = game_over_group.parentNode;\n            // temp.removeChild(game_over_group);\n            // temp.appendChild(game_over_group);\n            // $(game_over_group).attr(\"visibility\", \"visible\");\n            // document.getElementById(\"game_over_anim\").beginElement();\n            // playing = false;\n            // clearSelection();\n            // building = false;\n            // game_over = true;\n          }\n        } else {\n          monsterQueue.push(monster);\n        }\n        if (monster.selected) {\n          monster.refreshMonsterDetails();\n        }\n      }\n\n      let towerQueue = this.towerQueue;\n      for (let i = 0; i < towerQueue.length; i++) {\n        let tower = towerQueue[i];\n        if (tower.selected) {\n          tower.refreshTowerDetails();\n        }\n\n        // console.log((this.frame - tower.startFrame) % tower.interval[tower.level]);\n        // debugger;\n        if ((this.frame - tower.startFrame) % tower.interval[tower.level] === 0) {\n          // console.log(this.frame);\n          tower.shoot();\n        }\n      }\n\n      // $(\"#gold\").text(gold);\n      // $(\"#lives\").text(lives);\n      this.frame++;\n\n      if (monsterQueue.length <= 0) {\n        window.cancelAnimationFrame(this.requestID);\n      }\n    }, this.frameLength);\n  }\n\n  getDistance(x1, y1, x2, y2) {\n    let dx = (x1 - x2);\n    let dy = (y1 - y2);\n    return ((dx ** 2) + (dy ** 2)) ** 0.5;\n  }\n}\n\nexport default Game;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/assets/javascripts/game.js\n// module id = 2\n// module chunks = 0","const SVGNS = \"http://www.w3.org/2000/svg\";\n\nconst BASE_HP = 100;\nconst HP_INCREASE_RATIO = 1.25;\nconst BASE_BOUNTY = 10;\nconst BOUNTY_INCREASE_RATIO = 1.15;\n\nclass Monster {\n  constructor(level, index, game) {\n    this.game = game;\n\n    let svg = document.createElementNS(SVGNS, \"circle\");\n    $(svg).attr(\"class\", \"hidden-monster\");\n    svg.setAttribute(\"cx\", game.pathStart.x);\n    svg.setAttribute(\"cy\", game.pathStart.y);\n    svg.setAttribute(\"r\", 10);\n\n    $(\"#game\").append(svg);\n    this.svg = svg;\n\n    this.maxHp = BASE_HP * (HP_INCREASE_RATIO ** (level - 1));\n    this.hp = this.maxHp;\n\n    this.timeToFinish = 30000; //ms from beginning to end\n\n    if (index === 0) {\n      this.alive = true;\n      svg.setAttribute(\"class\", \"monster\");\n\n    } else {\n      this.alive = false;\n    }\n\n    this.framesToSpawn = Math.round(0.5 * this.game.fps * index);\n    this.stepLength = this.game.pathLength * (this.game.frameLength / this.timeToFinish);\n    // debugger;\n\n    this.step = 0;\n\n    this.slowedTimer = 0;\n    this.slowed = false;\n    this.slowedAmount = 0;\n\n    this.bounty = BASE_BOUNTY * (BOUNTY_INCREASE_RATIO ** (level - 1));\n    this.selected = false;\n\n    this.game.monsterQueue.push(this);\n\n    $(this.svg).on(\"click\", (e) => {\n      this.game.clearSelection();\n      this.game.selectedMonster = this;\n      this.selected = true;\n\n      $(this.svg).attr(\"class\", \"monster selected-monster\");\n      let temp = this.svg.parentNode;\n      temp.removeChild(this.svg);\n      temp.appendChild(this.svg);\n      $(\"#monster_details_group\").attr(\"visibility\", \"visible\");\n      this.refreshMonsterDetails();\n    });\n  }\n\n  unselect() {\n    this.selected = false;\n    $(this.svg).attr(\"class\", \"monster\");\n    $(\"#monster_details_group\").attr(\"visibility\", \"hidden\");\n    this.selectedMonster = null;\n  }\n\n  refreshMonsterDetails() {\n    $(\"#monster_details_name\").text(\"Monster\");\n    $(\"#monster_details_hp\").text(this.hp);\n    let percentage = this.hp / this.maxHp;\n    if (percentage > 0.75) {\n      $(\"#monster_details_hp\").attr(\"fill\", \"rgb(50, 120, 50)\");\n    } else if (percentage > 0.25) {\n      $(\"#monster_details_hp\").attr(\"fill\", \"rgb(240, 240, 0)\");\n    } else {\n      $(\"#monster_details_hp\").attr(\"fill\", \"rgb(240, 0, 0)\");\n    }\n    $(\"#monster_details_max_hp\").text(\"/ \" + this.maxHp);\n    $(\"#monster_details_bounty\").text(this.bounty.toString() + \"g\");\n    $(\"#monster_details_speed\").text(Math.round(this.stepLength * 60));\n    // $(\"#monster_details_group\").attr(\"visibility\", \"visible\");\n  }\n}\n\nexport default Monster;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/assets/javascripts/monster.js\n// module id = 3\n// module chunks = 0","class Bullet {\n  \n}\n\nexport default Bullet;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/assets/javascripts/bullet.js\n// module id = 4\n// module chunks = 0"],"sourceRoot":""}